---
- hosts: localhost
  user: root
  connection: local
  vars:
    disk_dev: "/dev/{{ disk }}"
    cpu_vendor: "{{ 'intel' if ansible_processor|select('in', 'Intel') else 'amd' }}"

  pre_tasks:
  - fail:
      msg: "'hostname' or 'root_password' isn't defined"
    when: hostname is undefined or root_password is undefined

  roles:
    - {role: partitioning, tags: partitioning}
    - {role: mounting, tags: mounting}
    - {role: pacstrap, tags: pacstrap}

  post_tasks:
  - name: Copy playbook and 802.1x conf in /root
    copy:
      src: "{{ item }}"
      dest: '/mnt/root'
    loop: ['/root/koaxiel', '/root/wpa_supplicant-wired.conf']
    when: ansible_virtualization_role == 'host'

# Chroot
- hosts: /mnt
  user: root
  connection: chroot
  vars:
    ansible_chroot_exe: arch-chroot
    disk_dev: "/dev/{{ disk }}"
    lvm_part: "{{ ansible_devices[disk]['partitions'].keys() | map('regex_search', '^.*2$') | select('string') | first }}"
    sys_uuid: "{{Â ansible_devices[disk]['partitions'][lvm_part]['uuid'] }}"
    cpu_vendor: "{{ 'intel' if ansible_processor|select('in', 'Intel') else 'amd' }}"

  roles:
   - { role: basics, tags: basics }
   - { role: fstab, tags: fstab }
   - { role: mkinitcpio, tags: mkinitcpio }
   - { role: bootloader, tags: bootloader }
   - { role: network, tags: network }
     # watchdog + installer dans la VM

  tasks:
  - name: Set root password
    user: name=root password={{ root_password | password_hash('sha512') }}
    tags: root_password

  - name: Enable sshd
    systemd:
      name: sshd.service
      enabled: yes
    when: ansible_virtualization_role == 'guest'
